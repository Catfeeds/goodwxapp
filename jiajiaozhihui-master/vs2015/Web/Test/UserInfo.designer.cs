#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SfSoft.web.Test
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="weixindb")]
	public partial class UserInfoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertWX_UserInfo(WX_UserInfo instance);
    partial void UpdateWX_UserInfo(WX_UserInfo instance);
    partial void DeleteWX_UserInfo(WX_UserInfo instance);
    #endregion
		
		public UserInfoDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["weixindbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public UserInfoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserInfoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserInfoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserInfoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<WX_UserInfo> WX_UserInfo
		{
			get
			{
				return this.GetTable<WX_UserInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WX_UserInfo")]
	public partial class WX_UserInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OpenId;
		
		private string _NickName;
		
		private string _HeadImgUrl;
		
		private string _Province;
		
		private string _City;
		
		private string _Sex;
		
		private System.Nullable<System.DateTime> _RegistDate;
		
		private System.Nullable<int> _IsSubscibe;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOpenIdChanging(string value);
    partial void OnOpenIdChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnHeadImgUrlChanging(string value);
    partial void OnHeadImgUrlChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnRegistDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistDateChanged();
    partial void OnIsSubscibeChanging(System.Nullable<int> value);
    partial void OnIsSubscibeChanged();
    #endregion
		
		public WX_UserInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OpenId
		{
			get
			{
				return this._OpenId;
			}
			set
			{
				if ((this._OpenId != value))
				{
					this.OnOpenIdChanging(value);
					this.SendPropertyChanging();
					this._OpenId = value;
					this.SendPropertyChanged("OpenId");
					this.OnOpenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(50)")]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadImgUrl", DbType="NVarChar(200)")]
		public string HeadImgUrl
		{
			get
			{
				return this._HeadImgUrl;
			}
			set
			{
				if ((this._HeadImgUrl != value))
				{
					this.OnHeadImgUrlChanging(value);
					this.SendPropertyChanging();
					this._HeadImgUrl = value;
					this.SendPropertyChanged("HeadImgUrl");
					this.OnHeadImgUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(20)")]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(20)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NVarChar(20)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistDate
		{
			get
			{
				return this._RegistDate;
			}
			set
			{
				if ((this._RegistDate != value))
				{
					this.OnRegistDateChanging(value);
					this.SendPropertyChanging();
					this._RegistDate = value;
					this.SendPropertyChanged("RegistDate");
					this.OnRegistDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSubscibe", DbType="Int")]
		public System.Nullable<int> IsSubscibe
		{
			get
			{
				return this._IsSubscibe;
			}
			set
			{
				if ((this._IsSubscibe != value))
				{
					this.OnIsSubscibeChanging(value);
					this.SendPropertyChanging();
					this._IsSubscibe = value;
					this.SendPropertyChanged("IsSubscibe");
					this.OnIsSubscibeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
