<?php 
namespace app\index\controller;
use app\index\model\User as UserModel;
use app\index\model\Order ;
use app\index\model\OrderH5 ;
use app\index\model\SubmitInfo ;
use think\Session;
use think\Request;
use think\Cookie;
class User extends Base{
	public function reservation()
	{
		$name = input('param.nickename');
		$gender = input('param.gender');//1男 2女
		$telephone = input('param.telephone');
		$verificationcode = input('param.verificationcode');
		$model_code = input('param.model_code');
		$model_name = input('param.model_name');
		$city = input('param.city');
		$dealer_id = input('param.dealer_id');
		$config_id = input('param.config_id');
		$car_model_id = input('param.car_model_id');
		$response = array();
		// dump(Session::get('verificationcode'));
		if($verificationcode != Session::get('verificationcode')){
			$response['error'] = 1;
			$response['message'] = '验证码不对';
			exit(json_encode($response));
			// dump('验证码不对');
		}

		//设备唯一性判断
		if(Cookie::has('equipment')){
			// do_log($conn,'add',$mobile,'该设备已预订'.$_COOKIE['is_order']);
			$response['error'] = 1;
			$response['message'] = '对不起，您无法参加此活动。可能的原因：</br>1.您已经报名参加过本活动</br> 2.您报名的4S店试驾名额已满';
			exit(json_encode($response));
		}
		//半年内不能重复试驾(手机号和时间来判断)
		//单个车型只能试驾一次(手机号和车型判断)
		$order = new Order();
		$order_where = " u.telephone = '" .$telephone. "' and (o.createtime > '" .date("Y-m-d H:i:s", strtotime("-6 month")). "' or o.model_code = '" .$model_code. "')";
		$orderinfo = $order->alias('o')
						   ->join('user u', 'u.id = o.user_id')
		                   ->where($order_where)->find();
		$orderh5 = new OrderH5();
		$orderh5_where = "( model_code = '" . $model_code . "' or create_time > '".date("Y-m-d H:i:s", strtotime("-6 month"))."') and mobile = '".$telephone."'";
		$orderh5info = $orderh5->where($orderh5_where)->find();
		// echo $orderh5->getLastSql();die;
		if( $orderinfo['id'] > 0 || $orderh5info['id'] > 0){
			$response['error'] = 1;
			$response['message'] = '对不起，您无法参加此活动。可能的原因：</br>1.您已经报名参加过本活动</br> 2.您报名的4S店试驾名额已满';
			exit(json_encode($response));
		}

		$user = new UserModel();
		$user->telephone = $telephone;
		$user->nickename = $name;
		$user->gender = $gender;
		$user->city = $city;
		$user->createtime = date('Y-m-d H:i:s');
		$user->last_login_time = date('Y-m-d H:i:s');
		// $this->setAccessToken($name);
		
		$access_token = $this->authcode($name,'encode', 'zwmedia', 3600*24*30*6);
		$$user->access_token = $access_token;
		$user->save();

		if($user->id < 1 || empty($user->id)){
			$response['error'] = 1;
			$response['message'] = '预约失败';
			exit(json_encode($response));
		}
		

		$order->user_id = $user->id;
		$order->car_model_id = $car_model_id;
		$order->model_name = $model_name;
		$order->model_code = $model_code ;
		$order->dealer_id = $dealer_id;//4s门店id
		$order->config_id = $config_id;//配置id
		$order->createtime = date('Y-m-d H:i:s');
		$order->status = 1;
		$order->updatetime = date('Y-m-d H:i:s');
		$order->order_name = $name;
		$order->order_sex = $gender;

		$order->save();
		if($order->id < 1 || empty($order->id)){
			$userdelete = $user->get($user->id);
			$userdelete->delete();
			$response['error'] = 1;
			$response['message'] = '预约失败';
			exit(json_encode($response));
		}
		$access_token_redis_key = "access_token_" . $access_token;
		$this->redis->set($access_token_redis_key, 1);
		$this->redis->expire($access_token_redis_key, 3600*24*30*6);
		Cookie::set('equipment','1',3600*24*30*6);
		$response['error'] = 0;
		$response['access_token'] =	$access_token;
		$response['message'] = '预约成功';
		exit(json_encode($response));
		
	}

	public function CreateVerificationCode()
	{
		$verificationcode = rand(100000,999999);
		Session::set('verificationcode',$verificationcode);
		// dump($verificationcode);
		// dump(Session::get('verificationcode'));
		exit(json_encode($verificationcode));
	}

	public function authcode($string, $operation = 'DECODE', $key = '', $expiry = 0) {   
	    // 动态密匙长度，相同的明文会生成不同密文就是依靠动态密匙   
	    $ckey_length = 4;   
	       
	    // 密匙   
	    $key = md5($key ? $key : $GLOBALS['discuz_auth_key']);   
	       
	    // 密匙a会参与加解密   
	    $keya = md5(substr($key, 0, 16));   
	    // 密匙b会用来做数据完整性验证   
	    $keyb = md5(substr($key, 16, 16));   
	    // 密匙c用于变化生成的密文   
	    $keyc = $ckey_length ? ($operation == 'DECODE' ? substr($string, 0, $ckey_length): 
	substr(md5(microtime()), -$ckey_length)) : '';   
	    // 参与运算的密匙   
	    $cryptkey = $keya.md5($keya.$keyc);   
	    $key_length = strlen($cryptkey);   
	    // 明文，前10位用来保存时间戳，解密时验证数据有效性，10到26位用来保存$keyb(密匙b)， 
	//解密时会通过这个密匙验证数据完整性   
	    // 如果是解码的话，会从第$ckey_length位开始，因为密文前$ckey_length位保存 动态密匙，以保证解密正确   
	    $string = $operation == 'DECODE' ? base64_decode(substr($string, $ckey_length)) :  
	sprintf('%010d', $expiry ? $expiry + time() : 0).substr(md5($string.$keyb), 0, 16).$string;   
	    $string_length = strlen($string);   
	    $result = '';   
	    $box = range(0, 255);   
	    $rndkey = array();   
	    // 产生密匙簿   
	    for($i = 0; $i <= 255; $i++) {   
	        $rndkey[$i] = ord($cryptkey[$i % $key_length]);   
	    }   
	    // 用固定的算法，打乱密匙簿，增加随机性，好像很复杂，实际上对并不会增加密文的强度   
	    for($j = $i = 0; $i < 256; $i++) {   
	        $j = ($j + $box[$i] + $rndkey[$i]) % 256;   
	        $tmp = $box[$i];   
	        $box[$i] = $box[$j];   
	        $box[$j] = $tmp;   
	    }   
	    // 核心加解密部分   
	    for($a = $j = $i = 0; $i < $string_length; $i++) {   
	        $a = ($a + 1) % 256;   
	        $j = ($j + $box[$a]) % 256;   
	        $tmp = $box[$a];   
	        $box[$a] = $box[$j];   
	        $box[$j] = $tmp;   
	        // 从密匙簿得出密匙进行异或，再转成字符   
	        $result .= chr(ord($string[$i]) ^ ($box[($box[$a] + $box[$j]) % 256]));   
	    }   
	    if($operation == 'DECODE') {  
	        // 验证数据有效性，请看未加密明文的格式   
	        if((substr($result, 0, 10) == 0 || substr($result, 0, 10) - time() > 0) &&  
	substr($result, 10, 16) == substr(md5(substr($result, 26).$keyb), 0, 16)) {   
	            return substr($result, 26);   
	        } else {   
	            return '';   
	        }   
	    } else {   
	        // 把动态密匙保存在密文里，这也是为什么同样的明文，生产不同密文后能解密的原因   
	        // 因为加密后的密文可能是一些特殊字符，复制过程可能会丢失，所以用base64编码   
	        return $keyc.str_replace('=', '', base64_encode($result));   
	    }   
	}

	public function testDrive()
	{
		$staff_name = input('param.staff_name');
		$staff_phone = input('param.staff_phone');
		$user_phone = input('param.user_phone');
		$img = input('param.img');
		$submitinfo = new SubmitInfo();
		$submitinfo->staff_name = $staff_name;
		$submitinfo->staff_phone = $staff_phone;
		$submitinfo->user_phone = $user_phone;
		$submitinfo->img = $img;
		$submitinfo->createtime = date('Y-m-d H:i:s');
		$submitinfo->save();
		if($submitinfo->id > 0){
			$response['error'] = 0;
			$response['message'] = '信息提交成功';
			
		}else{
			$response['error'] = 1;
			$response['message'] = '信息提交错误';
		}
		exit(json_encode($response));
	}
}