<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified">

    <!-- common type defines -->
    <xs:simpleType name="Boolean">
        <xs:restriction base="xs:string">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="InputType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="text"/>
            <xs:enumeration value="number"/>
            <xs:enumeration value="password"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Color">
        <xs:restriction base="xs:string">
            <xs:pattern value="(\#[a-zA-Z0-9]{6}|\#[a-zA-Z0-9]{8})"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Number">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="[\-]?[0-9]+(\.[0-9]+)?(dp|px)"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:double">
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="PXNumber">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="[\-]?[0-9]+(\.[0-9]+)?px"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="Gravity">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="left"/>
                    <xs:enumeration value="top"/>
                    <xs:enumeration value="right"/>
                    <xs:enumeration value="bottom"/>
                    <xs:enumeration value="center"/>
                    <xs:enumeration value="centerHorizontal"/>
                    <xs:enumeration value="centerVertical"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern
                            value="(left|top|right|bottom|center|centerHorizontal|centerVertical)((\|)(left|top|right|bottom|center|centerHorizontal|centerVertical))+"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>

    </xs:simpleType>
    <xs:simpleType name="TRBLValue">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern
                            value="([\-]?[0-9]+(\.[0-9]+)?(dp|px)?)(\s[\-]?[0-9]+(\.[0-9]+)?(dp|px)?){0,3}"></xs:pattern>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="WidthSpecLayoutConstrain">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="WidthLayoutConstrain"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern
                            value="(fill|match|wrap|matchHeight|([\-]?[0-9]+(\.[0-9]+)?[dDfF]?))(\s+)([\-]?[0-9]+(\.[0-9]+)?[dDfF]?)"></xs:pattern>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="Number">
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="WidthLayoutConstrain">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="fill"/>
                    <xs:enumeration value="match"/>
                    <xs:enumeration value="wrap"/>
                    <xs:enumeration value="matchHeight"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:double">
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="HeightSpecLayoutConstrain">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="HeightLayoutConstrain"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern
                            value="(fill|match|wrap|matchWidth|([\-]?[0-9]+(\.[0-9]+)?[dDfF]?))(\s+)([\-]?[0-9]+(\.[0-9]+)?[dDfF]?)"></xs:pattern>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="HeightLayoutConstrain">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="fill"/>
                    <xs:enumeration value="match"/>
                    <xs:enumeration value="wrap"/>
                    <xs:enumeration value="matchWidth"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:double">
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="Number">
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>


    <xs:simpleType name="LayoutMethod">
        <xs:restriction base="xs:string">
            <xs:enumeration value="frame"/>
            <xs:enumeration value="vertical"/>
            <xs:enumeration value="horizontal"/>
            <xs:enumeration value="flow"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- common attributes -->


    <xs:group name="ViewGroup">
        <xs:choice>
            <xs:element ref="include"/>
            <xs:element ref="View"/>
            <xs:element ref="Page"/>
            <xs:element ref="ScrollView"/>
            <xs:element ref="ImageView"/>
            <xs:element ref="TextView"/>
            <xs:element ref="InputView"/>
            <xs:element ref="TextAreaView"/>
            <xs:element ref="ListView"/>
            <xs:element ref="PullToRefreshView"/>
            <xs:element ref="Button"/>
            <xs:element ref="ToggleButton"/>
            <xs:element ref="ToggleButtonGroup"/>
            <xs:element ref="MapView"/>
            <xs:element ref="WebView"/>
            <xs:element ref="PanoView"/>
            <xs:element ref="ScannerView"/>
            <xs:element ref="Model3DView"/>
        </xs:choice>
    </xs:group>

    <xs:attributeGroup name="ViewAttributes">
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="src" type="xs:string"/>
        <xs:attribute name="alpha" type="xs:float"/>
        <xs:attribute name="anchorX" type="xs:float"/>
        <xs:attribute name="anchorY" type="xs:float"/>
        <xs:attribute name="scaleX" type="xs:float"/>
        <xs:attribute name="scaleY" type="xs:float"/>
        <xs:attribute name="rotateX" type="xs:float"/>
        <xs:attribute name="rotateY" type="xs:float"/>
        <xs:attribute name="rotateZ" type="xs:float"/>
        <xs:attribute name="cameraDistance" type="Number"/>
        <xs:attribute name="visible" type="Boolean"/>
        <xs:attribute name="touchable" type="Boolean"/>
        <xs:attribute name="width" default="fill" type="WidthSpecLayoutConstrain"/>
        <xs:attribute name="height" default="fill" type="HeightSpecLayoutConstrain"/>
        <xs:attribute name="margin" type="TRBLValue"/>
        <xs:attribute name="marginTop" type="Number"/>
        <xs:attribute name="marginRight" type="Number"/>
        <xs:attribute name="marginLeft" type="Number"/>
        <xs:attribute name="marginBottom" type="Number"/>
        <xs:attribute name="padding" type="TRBLValue"/>
        <xs:attribute name="paddingTop" type="Number"/>
        <xs:attribute name="paddingRight" type="Number"/>
        <xs:attribute name="paddingLeft" type="Number"/>
        <xs:attribute name="paddingBottom" type="Number"/>
        <xs:attribute name="gravity" type="Gravity"/>
        <xs:attribute name="contentGravity" type="Gravity"/>
        <xs:attribute name="background" type="Color"/>
        <xs:attribute name="borderWidth" type="Number"/>
        <xs:attribute name="borderColor" type="Color"/>
        <xs:attribute name="clipToBounds" type="Boolean"/>
        <xs:attribute name="borderCorner" type="TRBLValue"/>
        <xs:attribute name="layout" default="frame" type="LayoutMethod"/>
        <xs:attribute name="panoHeading" type="xs:float"/>
        <xs:attribute name="panoPitch" type="xs:float"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="ButtonAttributes">
        <xs:attribute name="text" type="xs:string"/>
        <xs:attribute name="fontColor" type="Color"/>
        <xs:attribute name="fontSize" type="Number"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="PanoViewAttributes">
        <xs:attribute name="panoId" type="xs:string"/>
        <xs:attribute name="heading" type="xs:float"/>
        <xs:attribute name="pitch" type="xs:float"/>
        <xs:attribute name="gravityEnable" type="Boolean"/>
        <xs:attribute name="zoom" type="xs:float"/>
        <xs:attribute name="VREnable" type="Boolean"/>
        <xs:attribute name="autoplayEnable" type="Boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="Model3DViewAttributes">
        <xs:attribute name="sceneId" type="xs:string"/>
    </xs:attributeGroup>

    <xs:element name="include">
        <xs:complexType mixed="true">
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>

            <xs:attribute name="src" type="xs:string"/>
            <xs:attribute name="data" type="xs:string"/>
            <xs:attributeGroup ref="ViewAttributes"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>

    <xs:element name="View">
        <xs:complexType mixed="true">
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ViewAttributes"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>

    <xs:element name="ScannerView">
        <xs:complexType mixed="true">
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ViewAttributes"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>

    <xs:element name="Model3DView">
        <xs:complexType mixed="true">
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ViewAttributes"/>
            <xs:attributeGroup ref="Model3DViewAttributes"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>

    <xs:element name="PanoView">
        <xs:complexType mixed="true">
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ViewAttributes"/>
            <xs:attributeGroup ref="PanoViewAttributes"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>

    <xs:element name="WebView">
        <xs:complexType mixed="true">
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ViewAttributes"/>
            <xs:attribute name="src" type="xs:string"/>
            <xs:attribute name="data" type="xs:string"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>

    <xs:element name="Page">
        <xs:complexType mixed="true">
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ViewAttributes"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>


    <xs:element name="InputView">
        <xs:complexType>
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ViewAttributes"/>
            <xs:attributeGroup ref="FontAttributes"/>
            <xs:attribute name="hint" type="xs:string"/>
            <xs:attribute name="inputType" type="InputType"/>
            <xs:attribute name="text" type="xs:string"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>
    <xs:element name="TextAreaView">
        <xs:complexType>
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ViewAttributes"/>
            <xs:attributeGroup ref="FontAttributes"/>
            <xs:attribute name="hint" type="xs:string"/>
            <xs:attribute name="inputType" type="InputType"/>
            <xs:attribute name="text" type="xs:string"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>
    <xs:element name="ListView">
        <xs:complexType>
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ListViewAttributes"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>


    <xs:element name="PullToRefreshView">
        <xs:complexType>
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ListViewAttributes"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>
    <xs:element name="ToggleButtonGroup">
        <xs:complexType mixed="true">
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ViewAttributes"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>

    <xs:element name="Button">
        <xs:complexType mixed="true">
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ViewAttributes"/>
            <xs:attributeGroup ref="ButtonAttributes"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>

    <xs:element name="ToggleButton">
        <xs:complexType mixed="true">
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ViewAttributes"/>
            <xs:attributeGroup ref="ButtonAttributes"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>

    <xs:element name="MapView">
        <xs:complexType mixed="true">
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ViewAttributes"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>


    <xs:element name="ImageView">
        <xs:complexType>
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ViewAttributes"/>
            <xs:attribute name="src" type="xs:string"/>
            <xs:attribute name="crop" type="PXNumber"/>
            <xs:attribute name="stretchX" type="PXNumber"/>
            <xs:attribute name="stretchY" type="PXNumber"/>
            <xs:attribute name="stretchWidth" type="PXNumber"/>
            <xs:attribute name="stretchHeight" type="PXNumber"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>

    <xs:element name="TextView">
        <xs:complexType>
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ViewAttributes"/>
            <xs:attributeGroup ref="FontAttributes"/>
            <xs:attribute name="text" type="xs:string"/>
            <xs:attribute name="lineSpace" type="Number"/>
            <xs:attribute name="wordSpace" type="Number"/>
            <xs:attribute name="html" type="xs:anyType"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>

    <xs:element name="ScrollView">
        <xs:complexType mixed="true">
            <xs:choice>
                <xs:group ref="ViewGroup" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attributeGroup ref="ScrollViewAttributes"/>
            <xs:anyAttribute/>
        </xs:complexType>
    </xs:element>

    <xs:attributeGroup name="FontAttributes">
        <xs:attribute name="fontBold" type="Boolean"/>
        <xs:attribute name="fontSize" type="Number"/>
        <xs:attribute name="fontColor" type="Color"/>
    </xs:attributeGroup>


    <xs:attributeGroup name="ScrollViewAttributes">
        <xs:attributeGroup ref="ViewAttributes"/>
        <xs:attribute name="pageScrollEnable" type="Boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="ListViewAttributes">
        <xs:attributeGroup ref="ScrollViewAttributes"/>
    </xs:attributeGroup>


</xs:schema>
