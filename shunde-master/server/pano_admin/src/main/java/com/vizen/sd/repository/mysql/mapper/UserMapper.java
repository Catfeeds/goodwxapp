/*
 * Copyright (C) 2015 - 2017 Microscene Inc., All Rights Reserved.
 *
 */
package com.vizen.sd.repository.mysql.mapper;

import com.vizen.framework.mybatis.BaseMapper;
import com.vizen.sd.repository.mysql.domain.User;
import com.vizen.sd.repository.mysql.domain.UserCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface UserMapper extends BaseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    long countByExample(UserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    int deleteByExample(UserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    @Delete({
        "delete from user",
        "where user_id = #{userId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    @Insert({
        "insert into user (user_id, user_name, ",
        "name, phone, email, ",
        "password, create_time, ",
        "user_status, description, ",
        "user_code, last_edit_time, ",
        "create_user_id, last_edit_user_id, ",
        "department_id, is_valid, ",
        "role_id)",
        "values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, ",
        "#{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{userStatus,jdbcType=TINYINT}, #{description,jdbcType=VARCHAR}, ",
        "#{userCode,jdbcType=VARCHAR}, #{lastEditTime,jdbcType=TIMESTAMP}, ",
        "#{createUserId,jdbcType=BIGINT}, #{lastEditUserId,jdbcType=BIGINT}, ",
        "#{departmentId,jdbcType=BIGINT}, #{isValid,jdbcType=TINYINT}, ",
        "#{roleId,jdbcType=TINYINT})"
    })
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    int insertSelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    List<User> selectByExample(UserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    @Select({
        "select",
        "user_id, user_name, name, phone, email, password, create_time, user_status, ",
        "description, user_code, last_edit_time, create_user_id, last_edit_user_id, department_id, ",
        "is_valid, role_id",
        "from user",
        "where user_id = #{userId,jdbcType=BIGINT}"
    })
    @ResultMap("com.vizen.sd.repository.mysql.mapper.UserMapper.BaseResultMap")
    User selectByPrimaryKey(Long userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    int updateByExampleSelective(@Param("record") User record, @Param("example") UserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    int updateByExample(@Param("record") User record, @Param("example") UserCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    int updateByPrimaryKeySelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    @Update({
        "update user",
        "set user_name = #{userName,jdbcType=VARCHAR},",
          "name = #{name,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "email = #{email,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "user_status = #{userStatus,jdbcType=TINYINT},",
          "description = #{description,jdbcType=VARCHAR},",
          "user_code = #{userCode,jdbcType=VARCHAR},",
          "last_edit_time = #{lastEditTime,jdbcType=TIMESTAMP},",
          "create_user_id = #{createUserId,jdbcType=BIGINT},",
          "last_edit_user_id = #{lastEditUserId,jdbcType=BIGINT},",
          "department_id = #{departmentId,jdbcType=BIGINT},",
          "is_valid = #{isValid,jdbcType=TINYINT},",
          "role_id = #{roleId,jdbcType=TINYINT}",
        "where user_id = #{userId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(User record);
    
    List<User> selectDetailUsers();
}