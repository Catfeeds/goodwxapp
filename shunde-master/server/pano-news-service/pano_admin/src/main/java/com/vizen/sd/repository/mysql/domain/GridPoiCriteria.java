/*
 * Copyright (C) 2015 - 2017 Microscene Inc., All Rights Reserved.
 *
 */
package com.vizen.sd.repository.mysql.domain;

import java.util.ArrayList;
import java.util.List;

public class GridPoiCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table grid_poi
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table grid_poi
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table grid_poi
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_poi
     */
    public GridPoiCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_poi
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_poi
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_poi
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_poi
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_poi
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_poi
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_poi
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_poi
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_poi
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_poi
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    @Override
    public String toString() {
        return "GridPoiCriteria [orderByClause=" + orderByClause + ",distinct=" + distinct + ",oredCriteria=" + oredCriteria + "]";
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table grid_poi
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPoiIdIsNull() {
            addCriterion("poi_id is null");
            return (Criteria) this;
        }

        public Criteria andPoiIdIsNotNull() {
            addCriterion("poi_id is not null");
            return (Criteria) this;
        }

        public Criteria andPoiIdEqualTo(String value) {
            if(value == null)return (Criteria)this;
            addCriterion("poi_id =", value, "poiId");
            return (Criteria) this;
        }

        public Criteria andPoiIdNotEqualTo(String value) {
            if(value == null)return (Criteria)this;
            addCriterion("poi_id <>", value, "poiId");
            return (Criteria) this;
        }

        public Criteria andPoiIdGreaterThan(String value) {
            if(value == null)return (Criteria)this;
            addCriterion("poi_id >", value, "poiId");
            return (Criteria) this;
        }

        public Criteria andPoiIdGreaterThanOrEqualTo(String value) {
            if(value == null)return (Criteria)this;
            addCriterion("poi_id >=", value, "poiId");
            return (Criteria) this;
        }

        public Criteria andPoiIdLessThan(String value) {
            if(value == null)return (Criteria)this;
            addCriterion("poi_id <", value, "poiId");
            return (Criteria) this;
        }

        public Criteria andPoiIdLessThanOrEqualTo(String value) {
            if(value == null)return (Criteria)this;
            addCriterion("poi_id <=", value, "poiId");
            return (Criteria) this;
        }

        public Criteria andPoiIdLike(String value) {
            if(value == null)return (Criteria)this;
            addCriterion("poi_id like", value, "poiId");
            return (Criteria) this;
        }

        public Criteria andPoiIdNotLike(String value) {
            if(value == null)return (Criteria)this;
            addCriterion("poi_id not like", value, "poiId");
            return (Criteria) this;
        }

        public Criteria andPoiIdIn(List<String> values) {
            if(values == null)return (Criteria)this;
            addCriterion("poi_id in", values, "poiId");
            return (Criteria) this;
        }

        public Criteria andPoiIdNotIn(List<String> values) {
            if(values == null)return (Criteria)this;
            addCriterion("poi_id not in", values, "poiId");
            return (Criteria) this;
        }

        public Criteria andPoiIdBetween(String value1, String value2) {
            if(value1 == null || value2 == null)return (Criteria)this;
            addCriterion("poi_id between", value1, value2, "poiId");
            return (Criteria) this;
        }

        public Criteria andPoiIdNotBetween(String value1, String value2) {
            if(value1 == null || value2 == null)return (Criteria)this;
            addCriterion("poi_id not between", value1, value2, "poiId");
            return (Criteria) this;
        }

        public Criteria andGridIdIsNull() {
            addCriterion("grid_id is null");
            return (Criteria) this;
        }

        public Criteria andGridIdIsNotNull() {
            addCriterion("grid_id is not null");
            return (Criteria) this;
        }

        public Criteria andGridIdEqualTo(Long value) {
            if(value == null)return (Criteria)this;
            addCriterion("grid_id =", value, "gridId");
            return (Criteria) this;
        }

        public Criteria andGridIdNotEqualTo(Long value) {
            if(value == null)return (Criteria)this;
            addCriterion("grid_id <>", value, "gridId");
            return (Criteria) this;
        }

        public Criteria andGridIdGreaterThan(Long value) {
            if(value == null)return (Criteria)this;
            addCriterion("grid_id >", value, "gridId");
            return (Criteria) this;
        }

        public Criteria andGridIdGreaterThanOrEqualTo(Long value) {
            if(value == null)return (Criteria)this;
            addCriterion("grid_id >=", value, "gridId");
            return (Criteria) this;
        }

        public Criteria andGridIdLessThan(Long value) {
            if(value == null)return (Criteria)this;
            addCriterion("grid_id <", value, "gridId");
            return (Criteria) this;
        }

        public Criteria andGridIdLessThanOrEqualTo(Long value) {
            if(value == null)return (Criteria)this;
            addCriterion("grid_id <=", value, "gridId");
            return (Criteria) this;
        }

        public Criteria andGridIdIn(List<Long> values) {
            if(values == null)return (Criteria)this;
            addCriterion("grid_id in", values, "gridId");
            return (Criteria) this;
        }

        public Criteria andGridIdNotIn(List<Long> values) {
            if(values == null)return (Criteria)this;
            addCriterion("grid_id not in", values, "gridId");
            return (Criteria) this;
        }

        public Criteria andGridIdBetween(Long value1, Long value2) {
            if(value1 == null || value2 == null)return (Criteria)this;
            addCriterion("grid_id between", value1, value2, "gridId");
            return (Criteria) this;
        }

        public Criteria andGridIdNotBetween(Long value1, Long value2) {
            if(value1 == null || value2 == null)return (Criteria)this;
            addCriterion("grid_id not between", value1, value2, "gridId");
            return (Criteria) this;
        }

        @Override
        public String toString() {
            return "GeneratedCriteria [criteria=" + criteria + "]";
        }

        public Criteria andPoiIdLikeInsensitive(String value) {
            addCriterion("upper(poi_id) like", value.toUpperCase(), "poiId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table grid_poi
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }

        @Override
        public String toString() {
            return "Criteria [->" + super.toString() + "]";
        }

        public Criteria setRowNum(String rowNum) {
            if(rowNum == null)return (Criteria)this;
            try {
                addCriterion("ROWNUM <=" + (Integer.parseInt(rowNum) + 1));
            } catch (NumberFormatException nfe) {
                throw new RuntimeException(nfe);
            }
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table grid_poi
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

        @Override
        public String toString() {
            return "Criterion [condition=" + condition + ",value=" + value + ",secondValue=" + secondValue + ",noValue=" + noValue + ",singleValue=" + singleValue + ",betweenValue=" + betweenValue + ",listValue=" + listValue + ",typeHandler=" + typeHandler + "]";
        }
    }
}