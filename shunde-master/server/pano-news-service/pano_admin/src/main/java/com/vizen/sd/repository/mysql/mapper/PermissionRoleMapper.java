/*
 * Copyright (C) 2015 - 2017 Microscene Inc., All Rights Reserved.
 *
 */
package com.vizen.sd.repository.mysql.mapper;

import com.vizen.framework.mybatis.BaseMapper;
import com.vizen.sd.repository.mysql.domain.PermissionRole;
import com.vizen.sd.repository.mysql.domain.PermissionRoleCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface PermissionRoleMapper extends BaseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_role
     */
    long countByExample(PermissionRoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_role
     */
    int deleteByExample(PermissionRoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_role
     */
    @Delete({
        "delete from permission_role",
        "where role_id = #{roleId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long roleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_role
     */
    @Insert({
        "insert into permission_role (role_id, role_name, ",
        "role_type, is_valid, ",
        "create_time, modify_time)",
        "values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, ",
        "#{roleType,jdbcType=BIGINT}, #{isValid,jdbcType=TINYINT}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})"
    })
    int insert(PermissionRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_role
     */
    int insertSelective(PermissionRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_role
     */
    List<PermissionRole> selectByExample(PermissionRoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_role
     */
    @Select({
        "select",
        "role_id, role_name, role_type, is_valid, create_time, modify_time",
        "from permission_role",
        "where role_id = #{roleId,jdbcType=BIGINT}"
    })
    @ResultMap("com.vizen.sd.repository.mysql.mapper.PermissionRoleMapper.BaseResultMap")
    PermissionRole selectByPrimaryKey(Long roleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_role
     */
    int updateByExampleSelective(@Param("record") PermissionRole record, @Param("example") PermissionRoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_role
     */
    int updateByExample(@Param("record") PermissionRole record, @Param("example") PermissionRoleCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_role
     */
    int updateByPrimaryKeySelective(PermissionRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_role
     */
    @Update({
        "update permission_role",
        "set role_name = #{roleName,jdbcType=VARCHAR},",
          "role_type = #{roleType,jdbcType=BIGINT},",
          "is_valid = #{isValid,jdbcType=TINYINT},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "modify_time = #{modifyTime,jdbcType=TIMESTAMP}",
        "where role_id = #{roleId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(PermissionRole record);
}