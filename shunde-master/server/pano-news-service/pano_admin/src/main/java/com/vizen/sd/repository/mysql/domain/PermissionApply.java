/*
 * Copyright (C) 2015 - 2017 Microscene Inc., All Rights Reserved.
 *
 */
package com.vizen.sd.repository.mysql.domain;

import com.vizen.framework.mybatis.BaseModel;
import java.io.Serializable;
import java.util.Date;

/**
 *
 * @author mark@visualbusiness.com
 * @date 2017-12-20
 *
 */
public class PermissionApply extends BaseModel implements Serializable {
    private Long applyId;

    /**
     * 申请人
     */
    private Long applyUserId;

    /**
     * 审核人
     */
    private Long auditUserId;

    /**
     * 创建时间
     */
    private Date createTime;

    /**
     * 审核时间
     */
    private Date auditTime;

    /**
     * 状态
     */
    private Byte status;

    /**
     * 描述信息
     */
    private String description;

    /**
     * 申请权限等级
     */
    private Byte applyRoleType;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table permission_apply
     */
    private static final long serialVersionUID = 1L;

    /**
     * @return apply_id
     */
    public Long getApplyId() {
        return applyId;
    }

    /**
     * @param applyId
     */
    public void setApplyId(Long applyId) {
        this.applyId = applyId;
    }

    /**
     * 获取申请人
     *
     * @return apply_user_id - 申请人
     */
    public Long getApplyUserId() {
        return applyUserId;
    }

    /**
     * 设置申请人
     *
     * @param applyUserId 申请人
     */
    public void setApplyUserId(Long applyUserId) {
        this.applyUserId = applyUserId;
    }

    /**
     * 获取审核人
     *
     * @return audit_user_id - 审核人
     */
    public Long getAuditUserId() {
        return auditUserId;
    }

    /**
     * 设置审核人
     *
     * @param auditUserId 审核人
     */
    public void setAuditUserId(Long auditUserId) {
        this.auditUserId = auditUserId;
    }

    /**
     * 获取创建时间
     *
     * @return create_time - 创建时间
     */
    public Date getCreateTime() {
        return createTime;
    }

    /**
     * 设置创建时间
     *
     * @param createTime 创建时间
     */
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    /**
     * 获取审核时间
     *
     * @return audit_time - 审核时间
     */
    public Date getAuditTime() {
        return auditTime;
    }

    /**
     * 设置审核时间
     *
     * @param auditTime 审核时间
     */
    public void setAuditTime(Date auditTime) {
        this.auditTime = auditTime;
    }

    /**
     * 获取状态
     *
     * @return status - 状态
     */
    public Byte getStatus() {
        return status;
    }

    /**
     * 设置状态
     *
     * @param status 状态
     */
    public void setStatus(Byte status) {
        this.status = status;
    }

    /**
     * 获取描述信息
     *
     * @return description - 描述信息
     */
    public String getDescription() {
        return description;
    }

    /**
     * 设置描述信息
     *
     * @param description 描述信息
     */
    public void setDescription(String description) {
        this.description = description == null ? null : description.trim();
    }

    /**
     * 获取申请权限等级
     *
     * @return apply_role_type - 申请权限等级
     */
    public Byte getApplyRoleType() {
        return applyRoleType;
    }

    /**
     * 设置申请权限等级
     *
     * @param applyRoleType 申请权限等级
     */
    public void setApplyRoleType(Byte applyRoleType) {
        this.applyRoleType = applyRoleType;
    }

    @Override
    public String toString() {
        return "PermissionApply [applyId=" + applyId + ",applyUserId=" + applyUserId + ",auditUserId=" + auditUserId + ",createTime=" + createTime + ",auditTime=" + auditTime + ",status=" + status + ",description=" + description + ",applyRoleType=" + applyRoleType + "->" + super.toString() + "]";
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_apply
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        PermissionApply other = (PermissionApply) that;
        return (this.getApplyId() == null ? other.getApplyId() == null : this.getApplyId().equals(other.getApplyId()))
            && (this.getApplyUserId() == null ? other.getApplyUserId() == null : this.getApplyUserId().equals(other.getApplyUserId()))
            && (this.getAuditUserId() == null ? other.getAuditUserId() == null : this.getAuditUserId().equals(other.getAuditUserId()))
            && (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()))
            && (this.getAuditTime() == null ? other.getAuditTime() == null : this.getAuditTime().equals(other.getAuditTime()))
            && (this.getStatus() == null ? other.getStatus() == null : this.getStatus().equals(other.getStatus()))
            && (this.getDescription() == null ? other.getDescription() == null : this.getDescription().equals(other.getDescription()))
            && (this.getApplyRoleType() == null ? other.getApplyRoleType() == null : this.getApplyRoleType().equals(other.getApplyRoleType()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_apply
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getApplyId() == null) ? 0 : getApplyId().hashCode());
        result = prime * result + ((getApplyUserId() == null) ? 0 : getApplyUserId().hashCode());
        result = prime * result + ((getAuditUserId() == null) ? 0 : getAuditUserId().hashCode());
        result = prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
        result = prime * result + ((getAuditTime() == null) ? 0 : getAuditTime().hashCode());
        result = prime * result + ((getStatus() == null) ? 0 : getStatus().hashCode());
        result = prime * result + ((getDescription() == null) ? 0 : getDescription().hashCode());
        result = prime * result + ((getApplyRoleType() == null) ? 0 : getApplyRoleType().hashCode());
        return result;
    }
}