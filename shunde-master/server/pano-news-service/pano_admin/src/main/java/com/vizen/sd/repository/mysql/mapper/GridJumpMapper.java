/*
 * Copyright (C) 2015 - 2017 Microscene Inc., All Rights Reserved.
 *
 */
package com.vizen.sd.repository.mysql.mapper;

import com.vizen.framework.mybatis.BaseMapper;
import com.vizen.sd.repository.mysql.domain.GridJump;
import com.vizen.sd.repository.mysql.domain.GridJumpCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface GridJumpMapper extends BaseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_jump
     */
    long countByExample(GridJumpCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_jump
     */
    int deleteByExample(GridJumpCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_jump
     */
    @Delete({
        "delete from grid_jump",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_jump
     */
    @Insert({
        "insert into grid_jump (id, jump_mark, ",
        "jump_grid_id, jump_grid_code, ",
        "jump_pano_id, jump_pano_name, ",
        "position, grid_id, ",
        "grid_code, projcet_id)",
        "values (#{id,jdbcType=BIGINT}, #{jumpMark,jdbcType=VARCHAR}, ",
        "#{jumpGridId,jdbcType=BIGINT}, #{jumpGridCode,jdbcType=VARCHAR}, ",
        "#{jumpPanoId,jdbcType=VARCHAR}, #{jumpPanoName,jdbcType=VARCHAR}, ",
        "#{position,jdbcType=VARCHAR}, #{gridId,jdbcType=BIGINT}, ",
        "#{gridCode,jdbcType=VARCHAR}, #{projcetId,jdbcType=BIGINT})"
    })
    int insert(GridJump record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_jump
     */
    int insertSelective(GridJump record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_jump
     */
    List<GridJump> selectByExample(GridJumpCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_jump
     */
    @Select({
        "select",
        "id, jump_mark, jump_grid_id, jump_grid_code, jump_pano_id, jump_pano_name, position, ",
        "grid_id, grid_code, projcet_id",
        "from grid_jump",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("com.vizen.sd.repository.mysql.mapper.GridJumpMapper.BaseResultMap")
    GridJump selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_jump
     */
    int updateByExampleSelective(@Param("record") GridJump record, @Param("example") GridJumpCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_jump
     */
    int updateByExample(@Param("record") GridJump record, @Param("example") GridJumpCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_jump
     */
    int updateByPrimaryKeySelective(GridJump record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grid_jump
     */
    @Update({
        "update grid_jump",
        "set jump_mark = #{jumpMark,jdbcType=VARCHAR},",
          "jump_grid_id = #{jumpGridId,jdbcType=BIGINT},",
          "jump_grid_code = #{jumpGridCode,jdbcType=VARCHAR},",
          "jump_pano_id = #{jumpPanoId,jdbcType=VARCHAR},",
          "jump_pano_name = #{jumpPanoName,jdbcType=VARCHAR},",
          "position = #{position,jdbcType=VARCHAR},",
          "grid_id = #{gridId,jdbcType=BIGINT},",
          "grid_code = #{gridCode,jdbcType=VARCHAR},",
          "projcet_id = #{projcetId,jdbcType=BIGINT}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(GridJump record);
}