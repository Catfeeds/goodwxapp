/*
 * Copyright (C) 2015 - 2017 Microscene Inc., All Rights Reserved.
 *
 */
package com.vizen.sd.repository.mysql.mapper;

import com.vizen.framework.mybatis.BaseMapper;
import com.vizen.sd.repository.mysql.domain.PermissionApply;
import com.vizen.sd.repository.mysql.domain.PermissionApplyCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface PermissionApplyMapper extends BaseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_apply
     */
    long countByExample(PermissionApplyCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_apply
     */
    int deleteByExample(PermissionApplyCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_apply
     */
    @Delete({
        "delete from permission_apply",
        "where apply_id = #{applyId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long applyId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_apply
     */
    @Insert({
        "insert into permission_apply (apply_id, apply_user_id, ",
        "audit_user_id, create_time, ",
        "audit_time, status, ",
        "description, apply_role_type)",
        "values (#{applyId,jdbcType=BIGINT}, #{applyUserId,jdbcType=BIGINT}, ",
        "#{auditUserId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{auditTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, ",
        "#{description,jdbcType=VARCHAR}, #{applyRoleType,jdbcType=TINYINT})"
    })
    int insert(PermissionApply record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_apply
     */
    int insertSelective(PermissionApply record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_apply
     */
    List<PermissionApply> selectByExample(PermissionApplyCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_apply
     */
    @Select({
        "select",
        "apply_id, apply_user_id, audit_user_id, create_time, audit_time, status, description, ",
        "apply_role_type",
        "from permission_apply",
        "where apply_id = #{applyId,jdbcType=BIGINT}"
    })
    @ResultMap("com.vizen.sd.repository.mysql.mapper.PermissionApplyMapper.BaseResultMap")
    PermissionApply selectByPrimaryKey(Long applyId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_apply
     */
    int updateByExampleSelective(@Param("record") PermissionApply record, @Param("example") PermissionApplyCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_apply
     */
    int updateByExample(@Param("record") PermissionApply record, @Param("example") PermissionApplyCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_apply
     */
    int updateByPrimaryKeySelective(PermissionApply record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table permission_apply
     */
    @Update({
        "update permission_apply",
        "set apply_user_id = #{applyUserId,jdbcType=BIGINT},",
          "audit_user_id = #{auditUserId,jdbcType=BIGINT},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "audit_time = #{auditTime,jdbcType=TIMESTAMP},",
          "status = #{status,jdbcType=TINYINT},",
          "description = #{description,jdbcType=VARCHAR},",
          "apply_role_type = #{applyRoleType,jdbcType=TINYINT}",
        "where apply_id = #{applyId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(PermissionApply record);
}