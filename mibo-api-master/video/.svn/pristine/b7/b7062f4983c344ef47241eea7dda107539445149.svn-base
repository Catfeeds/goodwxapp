<?php

/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2016/9/30
 * Time: 18:35
 */
class Domain_Game {

    private $req;
    private $gameModel;


    public function __construct() {
        $this->req = DI()->request->getAll();
        $this->gameModel = new Model_Game();

    }

    public function reqCard() {
        $live_model = new Model_LiveList();
        $live_info = $live_model->getLiveInfoByLiveId($this->req['live_id']);

        if (empty($live_info)) {
            throw new PhalApi_Exception_BadRequest('不存在该直播，请联系客服');
        }

        if ($live_info['anchor_id'] != $this->req['user_id']) {
            throw new PhalApi_Exception_BadRequest('您不具有该直播的发牌权限，请联系客服');
        }

        $rs = array();
        $loop_id = 0; //局数ID
        $start_server_time = round(microtime(true) * 1000);
        if ($this->req['gid'] == GAME_PSZ) {
            $psz = new Domain_PSZGame();
            $rs = $psz->reqCard();
            if (empty($rs)) {
                throw new PhalApi_Exception_BadRequest('产生牌值出错', 57);
            }

            $pool_card_log_data = array(
                'anchor_id'         => $this->req['user_id'],
                'gid'               => GAME_PSZ,
                'live_id'           => $this->req['live_id'],
                'dealer_id'         => $this->req['dealer_id'],
                'dealer_card'       => json_encode($rs['dealer_card']),
                'pool1_card'        => json_encode($rs['pool1_card']),
                'pool2_card'        => json_encode($rs['pool2_card']),
                'pool3_card'        => json_encode($rs['pool3_card']),
                'start_server_time' => $start_server_time,
            );
            $loop_id = $this->gameModel->insertGameCardLoopLog($pool_card_log_data);

            $redis_card = DI()->redis->get_time('every_liveroom_card_info');
            if (!empty($redis_card)) {
                $redis_card = json_decode($redis_card, true);
            }

            $last_live_card_info = array(
                'dealer_id'         => $this->req['dealer_id'],
                'loop_id'           => $loop_id,
                'dealer_card'       => $pool_card_log_data['dealer_card'],
                'pool1_card'        => $pool_card_log_data['pool1_card'],
                'pool2_card'        => $pool_card_log_data['pool2_card'],
                'pool3_card'        => $pool_card_log_data['pool3_card'],
                'start_server_time' => $pool_card_log_data['start_server_time'],
            );

            $redis_card[$this->req['live_id']] = $last_live_card_info;

            DI()->redis->set_time('every_liveroom_card_info', json_encode($redis_card), 60);

        }

        $rs['loop_id'] = $loop_id;
        $rs['start_server_time'] = $start_server_time;

        return $rs;
    }

    public function setResult() {
        $last_card_info = DI()->redis->get_time('every_liveroom_card_info');
        if (!empty($last_card_info)) {

            $last_card_info = json_decode($last_card_info, true);
            if ($last_card_info[$this->req['live_id']]) {
                $cur_microtime = round(microtime(true) * 1000);
                if (($cur_microtime - $last_card_info[$this->req['live_id']]['start_server_time']) > 18000) {
                    throw new PhalApi_Exception('您的网络延迟严重，本局数据无效', EC_NETWORK_DELAY);
                }
            }
        }

        if ($this->req['gid'] == GAME_PSZ) {
            return $this->setPSZResult();
        } else if ($this->req['gid'] == GAME_DNN) {
            throw new PhalApi_Exception("此游戏暂未开放", 58);
        } else {
            throw new PhalApi_Exception("此游戏暂未开放", 59);
        }
    }

    public function setPSZResult() {

        $user_model = new Model_User();
        $user_info = $user_model->getUsersInfoById($this->req['user_id']);
        if(empty($user_info)) {
            throw new PhalApi_Exception('不存在该用户', 456);
        }

        //输赢数据校验
        $loop_info = $this->gameModel->getGameLoopInfoByLoopId($this->req['loop_id']);
        if (empty($loop_info)) {
            throw new PhalApi_Exception_BadRequest('异常数据请求，请联系客服', 55);
        }

        $game = new Domain_PSZGame();
        $pool_rate = $game->getPoolRate($this->req['user_id'], $loop_info);

        //游戏结束抽成（小费）
        $tip_num = 0;
        $pool_1_num = $this->req['bet_pool1'] * $pool_rate[0];
        $tip_num += $pool_1_num > 0 ? $pool_1_num * 0.03 : 0;

        $pool_2_num = $this->req['bet_pool2'] * $pool_rate[1];
        $tip_num += $pool_2_num > 0 ? $pool_2_num * 0.03 : 0;

        $pool_3_num = $this->req['bet_pool3'] * $pool_rate[2];
        $tip_num += $pool_3_num > 0 ? $pool_3_num * 0.03 : 0;

        //应该减去抽成（小费）
        $earn_num = $pool_1_num + $pool_2_num + $pool_3_num - $tip_num;

        //如果超过500万，存在作弊嫌疑，发报警信息
        if($earn_num > 5000000) {
            DI()->mail = new PHPMailer_Lite();
            DI()->mail->send('362226577@qq.com', '玩家下注异常', '玩家下注超过500万了，赶紧去看看！');
        }
        $total_before = $user_info['coin_num'] + 0;
        $total_after = $user_info['coin_num'] + $earn_num;

        $bet_data = array(
            'user_id'      => $this->req['user_id'],
            'live_id'      => $this->req['live_id'],
            'gid'          => $this->req['gid'],
            'loop_id'      => $this->req['loop_id'],
            'bet_pool1'    => $this->req['bet_pool1'],
            'bet_pool2'    => $this->req['bet_pool2'],
            'bet_pool3'    => $this->req['bet_pool3'],
            'earn_num'     => $earn_num,
            'tip_num'      => $tip_num,
            'total_before' => $total_before,
            'total_after'  => $total_after,
        );

        $chatroom_user_list = DI()->redis->get_forever("chatroom_" . $this->req['live_id'] . "_user_list");
        if (empty($chatroom_user_list)) {
            DI()->logger->error('非在直播数据不允许回调', $this->req);
            //throw new PhalApi_Exception_BadRequest('非在直播数据不允许回调', 55);
        }

        $result = array(
            'pool1_earn'   => 0,
            'pool2_earn'   => 0,
            'pool3_earn'   => 0,
            'total_before' => $total_before,
            'total_after'  => $total_after,
        );
        $insert_id = $this->gameModel->insertGameLoopSettlement($bet_data);
        if ($insert_id > 0) {
            //超过500万不更新用户的米币，存在异常
            if ($earn_num != 0 && $earn_num < 5000000) {
                $rs = $user_model->update($this->req['user_id'], array('coin_num' => $total_after));
                if ($rs == 1) {
                    DI()->redis->del("user_user_id_" . $this->req['user_id']);
                }
            }

            $result['pool1_earn'] = $pool_1_num;
            $result['pool2_earn'] = $pool_2_num;
            $result['pool3_earn'] = $pool_3_num;
        }

        return $result;
    }

    //有主播场，进行庄家结算,其他用户结算走setResult()接口
    public function setDealerResult() {
        $every_liveroom_card_info = DI()->redis->get_time('every_liveroom_card_info');
        if(!empty($every_liveroom_card_info)) {
            $every_liveroom_card_info = json_decode($every_liveroom_card_info, true);
            if(isset($every_liveroom_card_info[$this->req['live_id']])) {
                $dealer_id = $every_liveroom_card_info[$this->req['live_id']]['dealer_id'];
            }
        }

        //先从缓存中取庄家id,若不存在，则从数据库中取
        if(!isset($dealer_id)) {
            $loop_info = DI()->notorm->game_loop_card_log->select('dealer_id')
                ->where('id = ?', $this->req['loop_id'])
                ->fetchOne();
            if(empty($loop_info)) throw new PhalApi_Exception('不存在这局游戏', 303);
            $dealer_id = $loop_info['dealer_id'];
        }

        //本局玩家下注合计，以此给庄家结算
        $total_of_loop = DI()->notorm->game_loop_settlement
            ->where('loop_id = ?', $this->req['loop_id'])->sum('earn_num + tip_num');
        $total_of_loop *= 0.97;



        if(!$total_of_loop) {
            throw new PhalApi_Exception('没人下注');
        }

        $user_update_data = array(
            'coin_num' => new NotORM_Literal('coin_num - ' . $total_of_loop),
        );
        DI()->notorm->user->where('id = ?', $dealer_id)->update($user_update_data);

        //若是主播，主播输为负数时，增加主播金币
        $model_live = new Model_LiveList();
        $live_info =$model_live->getLiveInfoByLiveId($this->req['live_id']);
        if($live_info['anchor_id'] == $dealer_id) {
            $model_user = new Model_User();
            $anchor_info = $model_user->getUsersInfoById($live_info['anchor_id']);
            if($anchor_info['coin_num'] < 0) {
                $data = array('coin_num' => 10000000);
                DI()->notorm->user->where('id = ?', $anchor_info['id'])->update($data);
            }
        }

        $model_game = new Model_Game();
        $winner = $model_game->getWinnerByLiveidLoopid($this->req['live_id'], $this->req['loop_id']);

        $domain_im = new Domain_IM();
        if(!empty($winner)) {
            $earn_num = $winner[0]['earn_num'];
            if($earn_num >= 10000) {
                $earn_num = round($earn_num/10000, 2) . '万';
            }

            $msg = '恭喜「' . $winner[0]['nick_name'] . '」赢得' . $earn_num . '米币，成为本局大赢家';
            $domain_im->sendLiveMsg($dealer_id, $this->req['chatroom_id'], $msg, IM_GAME_RESULT);

        } else {    //如果没人赢，仍然要给前端庄家金币信息，但是有人下注

            if($total_of_loop < 0) {
                $total_of_loop = round(-1 * $total_of_loop / 10000, 2) . '万';
                $msg = '庄家赢了' . $total_of_loop . '米币，成为本局大赢家';
                $domain_im->sendLiveMsg($dealer_id, $this->req['chatroom_id'], $msg, IM_GAME_RESULT);
            }
        }

        return true;

    }

    public function getLiveRank() {
        $live_rank = DI()->redis->get_time('live_rank_' . $this->req['live_id']);

        if (empty($live_rank)) {
            //开心榜 赢主播
            $win_list = $this->gameModel->getUserWinInLiveList($this->req['live_id']);

            //伤心榜 输给主播
            $lose_list = $this->gameModel->getUserLoseInLiveList($this->req['live_id']);

            $live_rank = array(
                'win_rank'  => $win_list,
                'lose_rank' => $lose_list,
            );

            $live_rank = json_encode($live_rank);
            DI()->redis->set_time('live_rank_' . $this->req['live_id'], $live_rank, 20);
        }

        $live_rank = json_decode($live_rank, true);
        return $live_rank;
    }

    public function changeDealer() {
        $model_live = new Model_LiveList();
        $live_info = $model_live->getLiveInfoByLiveId($this->req['live_id']);

        $model_user = new Model_User();
        $user = $model_user->getUsersInfoById($this->req['user_id']);
        //如果申请人不是主播，则要验证此人金币
        if($this->req['user_id'] != $live_info['anchor_id']) {
            if($user['coin_num'] <= 10000000) {
                throw new PhalApi_Exception('申请人金币不足一千万', 308);
            }
        }

        $insert_data['live_id'] = $this->req['live_id'];
        $insert_data['loop_id'] = $this->req['loop_id'];
        $insert_data['user_id'] = $this->req['user_id'];
        $insert_data['nick_name'] = $user['nick_name'];

        $rs = $this->gameModel->changeDealer($insert_data);
        if($rs) {
            $domain_im = new Domain_IM();
            $msg = '「' . $user['nick_name'] . '」成为新庄家';
            $domain_im->sendLiveMsg($live_info['anchor_id'], $live_info['chatroom_id'], $msg, IM_SYS_NOTICE);
            return $user;
        } else {
            throw new PhalApi_Exception('庄家切换失败', 577);
        }
    }

    //直播间获取新庄家信息用到
    public function getDealerByLiveId($live_id) {
        $dealer = DI()->notorm->apply_dealer->select('user_id, nick_name, loop_id')->where('live_id = ?', $live_id)
            ->order('id DESC')->fetchOne();
        if(empty($dealer)) {
            return false;
        }
        $user = DI()->notorm->user->select('coin_num')->where('id = ?', $dealer['user_id'])
            ->fetchOne();
        //主要是直播间前端用庄家键是id,而不是user_id
        $dealer['id'] = $dealer['user_id'];
        $dealer['coin_num'] = $user['coin_num'];
        return $dealer;

    }

}