<?php

/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2016/8/16
 * Time: 18:35
 */
class Domain_Pay {

    private $req;

    public function __construct() {
        $this->req = DI()->request->getAll();
    }

    public function getRechargeItemList() {
        $model = new Model_RechargeItem();
        $item_list = $model->getRechargeItemList();

        if (empty($item_list)) {
            throw new PhalApi_Exception_BadRequest("数据为空", 60);
        }
        return $item_list;
    }

    public function getRechargeCoinItemList() {
        $model = new Model_RechargeItem();
        $item_list = $model->getRechargeCoinItemList();

        if (empty($item_list)) {
            throw new PhalApi_Exception_BadRequest("数据为空", 60);
        }
        return $item_list;
    }

    public function getExchange2CoinItemList() {
        $key = "exchange_2_coin_item_list";
        $list_string = DI()->redis->get_time($key);
        if (empty($list_string)) {
            $item_list = DI()->notorm->exchange_item
                ->select("id, diamond_num, coin_num, type")
                ->where("is_show=1")
                ->where("type=0")
                ->order('sort DESC')
                ->fetchAll();
            DI()->redis->set_time($key, json_encode($item_list), 3600);
        } else {
            $item_list = json_decode($list_string, true);
        }

        if (empty($item_list)) {
            throw new PhalApi_Exception_BadRequest("数据为空", 61);
        }
        return $item_list;

    }

    public function getExchange2DiamondItemList() {
        $key = "exchange_2_diamond_item_list";
        $list_string = DI()->redis->get_time($key);
        if (empty($list_string)) {
            $item_list = DI()->notorm->exchange_item
                ->select("id, diamond_num, coin_num, type")
                ->where("is_show=1")
                ->where("type=1")
                ->order('sort DESC')
                ->fetchAll();
            DI()->redis->set_time($key, json_encode($item_list), 3600);
        } else {
            $item_list = json_decode($list_string, true);
        }

        if (empty($item_list)) {
            throw new PhalApi_Exception_BadRequest("数据为空", 62);
        }
        return $item_list;
    }


    public function diamondExchange2Coin() {

        $user_domain = new Domain_User();
        $user_info = $user_domain->getUsersInfoById($this->req['user_id']);
        if (empty($user_info)) {
            throw new PhalApi_Exception_BadRequest("用户ID不存在", 63);
        }

        $item_info = DI()->notorm->exchange_item->select("*")->where('id=?', $this->req['item_id'])->where('type=0')->fetchOne();
        if (empty($item_info)) {
            throw new PhalApi_Exception_BadRequest("兑换列表ID不存在", 64);
        }

        $diamond_num = $item_info['diamond_num'];
        $coin_num = $item_info['coin_num'];
        if ($user_info['diamond_num'] < $diamond_num) {
            throw new PhalApi_Exception_BadRequest("您的钻石不够，请先充值吧", 65);
        }

        $rs = $user_domain->updateUserDiamondNumReduce($user_info['id'], $diamond_num, false, $coin_num);
        if ($rs) {
            $deal_log_data = array(
                'user_id'     => $user_info['id'],
                'to_user_id'  => 0,
                'mid'         => MOUDEL_USER_DIAMOND_EXCHANGE_COIN,
                'value'       => $coin_num,
                'extra'       => $item_info['id'],
                'deal_type'   => DEAL_TYPE_DIAMOND,
                'deal_num'    => $diamond_num,
                'deal_before' => $user_info['diamond_num'],
                'deal_after'  => $user_info['diamond_num'] - $diamond_num,
            );

            $deal_log_model = new Model_UserDealLog();
            $insert_id = $deal_log_model->insertDealLog($deal_log_data);
            if ($insert_id > 0) {
                return $deal_log_data;
            }
        }

        throw new PhalApi_Exception_BadRequest("兑换失败", 66);
    }

    public function getPayType() {
        $os = $this->req['os'];
        $model_config = new Model_AppConfig();
        return $model_config->getPayType($os);
    }

    public function placeOrder() {
        $type = $this->req['type'];
        if($type == 1) {    //如果是微信下单
            return $this->wechat_order();
        }

        if($type == 2) {    //如果是支付宝下单
            return $this->alipay_order();
        }

        if($type == 3) {
            return $this->ios_order();
        }

    }

    public function wechat_order() {
        //获取微信支付配置
        $wechat_pay_config = DI()->config->get('app.wechat_pay');
        $config['appid'] = $wechat_pay_config['appid'];
        $config['mch_id'] = $wechat_pay_config['mch_id'];
        $config['api_key'] = $wechat_pay_config['api_key'];
        $config['notify_url'] = $wechat_pay_config['notify_url'];
        $WxPay = new ThirdPay_Wechat($config);

        //订单相关信息
        $body = '米播充值，微信支付';
        $rand_str = str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');
        $pay_no = 'mibo'.time().'_'.substr($rand_str, 0, 5);
        $money = $this->req['money'];

        //微信统一下单接口，获取预支付订单号
        $pay_res = $WxPay->getPrePayOrder($body,$pay_no,$money);
        if(isset($pay_res['return_code']) && $pay_res['return_code'] == 'SUCCESS') {
            //订单写入数据库
            $order['user_id'] = $this->req['user_id'];
            $order['type'] = $this->req['type'];
            $order['money'] = $this->req['money'];
            $order['order_no'] = $pay_no;
            $order['operation_id'] = $this->req['operation_id'];
            $order['operation_value'] = $this->req['operation_value'];
            $order['channel'] = isset($this->req['channel']) ? $this->req['channel'] : '';
            DI()->notorm->recharge_log->insert($order);
            $signData = array(
                'appid' =>  $wechat_pay_config['appid'],
                'partnerid' =>  $wechat_pay_config['mch_id'],
                'prepayid' =>  $pay_res['prepay_id'],
                'package' =>  'Sign=WXPay',
                'noncestr' =>  $pay_res['noncestr'],
                'timestamp' =>  strval(time()),
            );
            ksort($signData);
            $sign = $WxPay->getSign($signData);

            $signData['sign'] = $sign;
            $signData['type'] = $this->req['type'];
            $signData['order_no'] = $pay_no;
            $signData['subject'] = '米播充值';
            $signData['body'] = $body;
            $signData['total_fee'] = $this->req['money'];
            $signData['id'] = $this->req['id'];     //米播充值钻石价格列表id
            return $signData;
        }

        throw new PhalApi_Exception_BadRequest('统一下单失败', 01);
    }

    public function alipay_order() {
        $rand_str = str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');
        $pay_no = 'mibo'.time().'_'.substr($rand_str, 0, 5);

        //获取支付宝配置信息
        $res = DI()->config->get('app.alipay');
        $res['type'] = $this->req['type'];
        $res['order_no'] = $pay_no;
        $res['subject'] = '米播充值';
        $res['body'] = '米播充值，支付宝支付';
        $res['total_fee'] = $this->req['money'];

        //订单写入数据库
        $order['user_id'] = $this->req['user_id'];
        $order['type'] = $this->req['type'];
        $order['money'] = $this->req['money'];
        $order['order_no'] = $pay_no;
        $order['operation_id'] = $this->req['operation_id'];
        $order['operation_value'] = $this->req['operation_value'];
        $order['channel'] = isset($this->req['channel']) ? $this->req['channel'] : '';
        DI()->notorm->recharge_log->insert($order);

        $res['operation_id'] = $this->req['operation_id'];
        $res['operation_value'] = $this->req['operation_value'];
        return $res;
    }

    public function ios_order() {
        $rand_str = str_shuffle('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');
        $pay_no = 'mibo'.time().'_'.substr($rand_str, 0, 5);

        ////获取支付宝配置信息
        //$res = DI()->config->get('app.alipay');
        $res['type'] = $this->req['type'];
        $res['order_no'] = $pay_no;
        $res['subject'] = '米播充值';
        $res['body'] = '米播充值，支付宝支付';
        $res['total_fee'] = $this->req['money'];

        //订单写入数据库
        $order['user_id'] = $this->req['user_id'];
        $order['type'] = $this->req['type'];
        $order['money'] = $this->req['money'];
        $order['order_no'] = $pay_no;
        $order['operation_id'] = isset($this->req['operation_id']) ? $this->req['operation_id'] : 1;
        $order['operation_value'] = isset($this->req['operation_value']) ? $this->req['operation_value'] : 1;
        $order['channel'] = isset($this->req['channel']) ? $this->req['channel'] : '';
        DI()->notorm->recharge_log->insert($order);

        $res['operation_id'] = isset($this->req['operation_id']) ? $this->req['operation_id'] : 1;
        $res['operation_value'] = isset($this->req['operation_value']) ? $this->req['operation_value'] : 1;
        return $res;
    }

    //用户通过微信下单后，更新用户的钻石，米币
    public function updateDiamond() {
        //一、取得订单信息
        $order = DI()->notorm->recharge_log->where('user_id = ?', $this->req['user_id'])
            ->where('order_no = ?', $this->req['order_no'])->fetchOne();
        if(!isset($order) || empty($order)) {
            throw new PhalApi_Exception('订单不存在', 318);
        }

        if($order['is_update_diamond'] == 1) {
            throw new PhalApi_Exception('该订单已经发放钻石', 319);
        }

        //二、更新已经发放钻石字段
        $update_data = array('is_update_diamond' => 1);
        DI()->notorm->recharge_log->where('user_id = ?', $this->req['user_id'])
            ->where('order_no = ?', $this->req['order_no'])->update($update_data);

        //三、如果是礼包的话，还要把发放礼包记录写入数据库,并更新用户米币信息
        if($order['operation_id'] == 2) {
            //三、1、写入获取礼包记录
            $model_gift_package_log = new Model_GiftPackageLog();
            $model_gift_package_log->insertUpdateLog($this->req['user_id'], $order['operation_value']);

            //三、2、根据礼包id取出优惠价格能买到的钻石
            $model_gift_package = new Model_GiftPackage();
            $price_item = $model_gift_package->getPackageBySortId($order['operation_value']);
            $model_user = new Model_User();
            DI()->logger->debug('vip礼包测试一',$price_item['diamond_num'].'------'.$price_item['coin_num']);
            $rs = $model_user->updateUserDiamondCoin($this->req['user_id'], $price_item['diamond_num'], $price_item['coin_num']);

        } else {
            //三、1、更新充值的钻石
            $model = new Model_RechargeItem();
            $price_item =  $model->getItemById($order['operation_value']);
            $model_user = new Model_User();
            DI()->logger->debug('vip礼包测试二',$price_item['diamond_num'].'------'.$price_item['coin_num']);
            $rs = $model_user->updateUserDiamondCoin($this->req['user_id'], $price_item['diamond_num'], $price_item['extra_num']);
        }

        if(!$rs) {
            throw new PhalApi_Exception('钻石充值失败，联系管理员', 515);
        }

        $user_info = $model_user->getUsersInfoById($this->req['user_id']);

        DI()->mail = new PHPMailer_Lite();

        //用户获取到的米币、米钻等数量，下面的代码都是大龙写的
        $user_get_coin_num = 0;
        $user_get_coin_extra_num = 0;
        $user_get_diamond_num = 0;
        $extra_string = "";

        if($order['operation_id'] == 1) {
            $Model_RechargeItem = new Model_RechargeItem();
            $op_info = $Model_RechargeItem->getItemById($order['operation_value']);
            $user_get_coin_num = 0;
            $user_get_coin_extra_num = $op_info['extra_num'];
            $user_get_diamond_num = $op_info['diamond_num'];
        } else if($order['operation_id'] == 2) {
            $Model_GiftPackage = new Model_GiftPackage();
            $op_info = $Model_GiftPackage->getPackageBySortId($order['operation_value']);
            $user_get_coin_num = $op_info['coin_num'];
            $user_get_coin_extra_num = $op_info['extra_send_coin'];
            $user_get_diamond_num = $op_info['diamond_num'];
            $extra_string = $op_info['name'];
        }

        $add_arr = array('cheng@dianhengad.com', '362226577@qq.com', '313256513@qq.com');

        $mailBody = '<div><b><span large;\"=""><font color="#808080">&nbsp; &nbsp; 好消息！</font></span></b></div><div><b><font color="#808080">&nbsp; &nbsp; 玩家 </font><font color="#99cc00">'.$user_info['nick_name'].' </font><font color="#808080">&nbsp;在 &nbsp;</font><font color="#99cc00">'.$order['create_time'].' </font><font color="#808080">&nbsp;通过 &nbsp;</font><font color="#99cc00">'.($order['type'] == 1?"微信":"支付宝").' &nbsp;</font><font color="#808080">充值了 </font><font color="#99cc00">&nbsp;'.$order['money']*0.01.'</font><font color="#808080"> 元，</font><font color="#99cc00">'.$extra_string.'</font><font color="#808080">获得了 </font><font color="#99cc00">'.$user_get_diamond_num.'</font><font color="#808080">&nbsp;米钻，获得 </font><font color="#99cc00">'.$user_get_coin_num.'</font><font color="#808080"> 米币，获得赠送&nbsp;</font><font color="#99cc00">'.$user_get_coin_extra_num.'</font><font color="#808080"> 米币</font></b><b style="color: rgb(128, 128, 128);">。</b></div><div><font color="#808080"><b>&nbsp; &nbsp; 加油！</b><b>加油！</b><b>加油！</b></font></div><div style="\&quot;text-align:" left;\"=""><font size="\&quot;4\&quot;" color="#808080"><b>&nbsp; &nbsp; 顺祝：新年快乐！</b></font></div>';

       // $mailBody = '<div><b><font color=\"#808080\"><font size=\"4\">您好，</font><span style=\"font-size: large;\">现在有好消息通知您！</span></font></b></div><div><font size=\"4\"><b><font color=\"#808080\">&nbsp; &nbsp; 玩家&nbsp;</font><font color=\"#99cc00\">'.$user_info['nick_name'].'</font><font color=\"#808080\"> 在 </font><font color=\"#99cc00\">'.$order['create_time'].'</font><font color=\"#808080\"> 通过 '.($order['type'] == 1?"微信":"支付宝").' 充值了 </font><font color=\"#99cc00\">'.$order['money']*0.01.'&nbsp;</font><font color=\"#808080\">元，加油！</font></b></font></div><div style=\"text-align: left;\"><font size=\"4\" color=\"#808080\"><b>新年快乐！</b></font></div>';
        DI()->mail->send($add_arr, '【米播】充值成功订单通知-'.$order['money']*0.01 . "元", $mailBody);

        return $user_info;
    }

    public function updateCoin() {
        DI()->logger->debug('vip礼包测试三','sss');
        //一、取得订单信息
        $order = DI()->notorm->recharge_log->where('user_id = ?', $this->req['user_id'])
            ->where('order_no = ?', $this->req['order_no'])->fetchOne();
        if(!isset($order) || empty($order)) {
            throw new PhalApi_Exception('订单不存在', 318);
        }

        if($order['is_update_diamond'] == 1) {
            throw new PhalApi_Exception('该订单已经发放米币', 319);
        }

        //二、1、更新充值的米币
        $model = new Model_RechargeItem();
        $price_item =  $model->getItemById($order['operation_value']);
        $model_user = new Model_User();
        $vip_level_arr = DI()->notorm->user->select('vip_level')->where('id', $this->req['user_id'])->fetchOne();
        $vip_level = $vip_level_arr['vip_level'];
        //如果是vip额外赠送的再乘于1.5倍
        if($vip_level > 0) $price_item['extra_num'] *= 1.5;

        $rs = $model_user->updateUserDiamondCoin(
            $this->req['user_id'], $price_item['diamond_num'], $price_item['extra_num'] + $price_item['coin_num']);

        //DI()->logger->debug('测试充米币',$price_item['id'].'---'.$price_item['diamond_num'].'----'.$price_item['coin_num'].'-----'.$price_item['extra_num']);
        //三、更新已经发放米币字段
        $update_data = array('is_update_diamond' => 1);
        DI()->notorm->recharge_log->where('user_id = ?', $this->req['user_id'])
            ->where('order_no = ?', $this->req['order_no'])->update($update_data);

        if(!$rs) {
            throw new PhalApi_Exception('钻石充值失败，联系管理员', 515);
        }

        $user_info = $model_user->getUsersInfoById($this->req['user_id']);

        DI()->mail = new PHPMailer_Lite();

        //用户获取到的米币、米钻等数量，下面的代码都是大龙写的
        $extra_string = "";

        $Model_RechargeItem = new Model_RechargeItem();
        $op_info = $Model_RechargeItem->getItemById($order['operation_value']);
        $user_get_coin_num = $op_info['coin_num'];
        $user_get_coin_extra_num = $op_info['extra_num'];
        $user_get_diamond_num = $op_info['diamond_num'];


        $add_arr = array('cheng@dianhengad.com', '362226577@qq.com', '313256513@qq.com');

        $mailBody = '<div><b><span large;\"=""><font color="#808080">&nbsp; &nbsp; 好消息！</font></span></b></div><div><b><font color="#808080">&nbsp; &nbsp; 玩家 </font><font color="#99cc00">'.$user_info['nick_name'].' </font><font color="#808080">&nbsp;在 &nbsp;</font><font color="#99cc00">'.$order['create_time'].' </font><font color="#808080">&nbsp;通过 &nbsp;</font><font color="#99cc00">'.($order['type'] == 1?"微信":"支付宝").' &nbsp;</font><font color="#808080">充值了 </font><font color="#99cc00">&nbsp;'.$order['money']*0.01.'</font><font color="#808080"> 元，</font><font color="#99cc00">'.$extra_string.'</font><font color="#808080">获得了 </font><font color="#99cc00">'.$user_get_diamond_num.'</font><font color="#808080">&nbsp;米钻，获得 </font><font color="#99cc00">'.$user_get_coin_num.'</font><font color="#808080"> 米币，获得赠送&nbsp;</font><font color="#99cc00">'.$user_get_coin_extra_num.'</font><font color="#808080"> 米币</font></b><b style="color: rgb(128, 128, 128);">。</b></div><div><font color="#808080"><b>&nbsp; &nbsp; 加油！</b><b>加油！</b><b>加油！</b></font></div><div style="\&quot;text-align:" left;\"=""><font size="\&quot;4\&quot;" color="#808080"><b>&nbsp; &nbsp; 顺祝：新年快乐！</b></font></div>';

        // $mailBody = '<div><b><font color=\"#808080\"><font size=\"4\">您好，</font><span style=\"font-size: large;\">现在有好消息通知您！</span></font></b></div><div><font size=\"4\"><b><font color=\"#808080\">&nbsp; &nbsp; 玩家&nbsp;</font><font color=\"#99cc00\">'.$user_info['nick_name'].'</font><font color=\"#808080\"> 在 </font><font color=\"#99cc00\">'.$order['create_time'].'</font><font color=\"#808080\"> 通过 '.($order['type'] == 1?"微信":"支付宝").' 充值了 </font><font color=\"#99cc00\">'.$order['money']*0.01.'&nbsp;</font><font color=\"#808080\">元，加油！</font></b></font></div><div style=\"text-align: left;\"><font size=\"4\" color=\"#808080\"><b>新年快乐！</b></font></div>';
        DI()->mail->send($add_arr, '【米播】充值成功订单通知-'.$order['money']*0.01 . "元", $mailBody);

        return $user_info;
    }
}